// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddMemeberBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView addButton;

  @NonNull
  public final LinearLayout ll1;

  @NonNull
  public final RecyclerView searchRecyclerView;

  @NonNull
  public final EditText searchUsers;

  @NonNull
  public final RecyclerView selectedRecyclerView;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final ImageButton turnback;

  private ActivityAddMemeberBinding(@NonNull RelativeLayout rootView, @NonNull TextView addButton,
      @NonNull LinearLayout ll1, @NonNull RecyclerView searchRecyclerView,
      @NonNull EditText searchUsers, @NonNull RecyclerView selectedRecyclerView,
      @NonNull TextView textView4, @NonNull ImageButton turnback) {
    this.rootView = rootView;
    this.addButton = addButton;
    this.ll1 = ll1;
    this.searchRecyclerView = searchRecyclerView;
    this.searchUsers = searchUsers;
    this.selectedRecyclerView = selectedRecyclerView;
    this.textView4 = textView4;
    this.turnback = turnback;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddMemeberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddMemeberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_memeber, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddMemeberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addButton;
      TextView addButton = ViewBindings.findChildViewById(rootView, id);
      if (addButton == null) {
        break missingId;
      }

      id = R.id.ll1;
      LinearLayout ll1 = ViewBindings.findChildViewById(rootView, id);
      if (ll1 == null) {
        break missingId;
      }

      id = R.id.searchRecyclerView;
      RecyclerView searchRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (searchRecyclerView == null) {
        break missingId;
      }

      id = R.id.searchUsers;
      EditText searchUsers = ViewBindings.findChildViewById(rootView, id);
      if (searchUsers == null) {
        break missingId;
      }

      id = R.id.selectedRecyclerView;
      RecyclerView selectedRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (selectedRecyclerView == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.turnback;
      ImageButton turnback = ViewBindings.findChildViewById(rootView, id);
      if (turnback == null) {
        break missingId;
      }

      return new ActivityAddMemeberBinding((RelativeLayout) rootView, addButton, ll1,
          searchRecyclerView, searchUsers, selectedRecyclerView, textView4, turnback);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
