// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SenderLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout fileLayout;

  @NonNull
  public final TextView fileName;

  @NonNull
  public final CircleImageView fileic;

  @NonNull
  public final TextView noted;

  @NonNull
  public final CircleImageView pro;

  @NonNull
  public final FrameLayout profileContainer;

  @NonNull
  public final CircleImageView pronone;

  @NonNull
  public final ImageView senderImageView;

  @NonNull
  public final TextView sendertextset;

  private SenderLayoutBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout fileLayout,
      @NonNull TextView fileName, @NonNull CircleImageView fileic, @NonNull TextView noted,
      @NonNull CircleImageView pro, @NonNull FrameLayout profileContainer,
      @NonNull CircleImageView pronone, @NonNull ImageView senderImageView,
      @NonNull TextView sendertextset) {
    this.rootView = rootView;
    this.fileLayout = fileLayout;
    this.fileName = fileName;
    this.fileic = fileic;
    this.noted = noted;
    this.pro = pro;
    this.profileContainer = profileContainer;
    this.pronone = pronone;
    this.senderImageView = senderImageView;
    this.sendertextset = sendertextset;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SenderLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SenderLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sender_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SenderLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fileLayout;
      LinearLayout fileLayout = ViewBindings.findChildViewById(rootView, id);
      if (fileLayout == null) {
        break missingId;
      }

      id = R.id.fileName;
      TextView fileName = ViewBindings.findChildViewById(rootView, id);
      if (fileName == null) {
        break missingId;
      }

      id = R.id.fileic;
      CircleImageView fileic = ViewBindings.findChildViewById(rootView, id);
      if (fileic == null) {
        break missingId;
      }

      id = R.id.noted;
      TextView noted = ViewBindings.findChildViewById(rootView, id);
      if (noted == null) {
        break missingId;
      }

      id = R.id.pro;
      CircleImageView pro = ViewBindings.findChildViewById(rootView, id);
      if (pro == null) {
        break missingId;
      }

      id = R.id.profileContainer;
      FrameLayout profileContainer = ViewBindings.findChildViewById(rootView, id);
      if (profileContainer == null) {
        break missingId;
      }

      id = R.id.pronone;
      CircleImageView pronone = ViewBindings.findChildViewById(rootView, id);
      if (pronone == null) {
        break missingId;
      }

      id = R.id.senderImageView;
      ImageView senderImageView = ViewBindings.findChildViewById(rootView, id);
      if (senderImageView == null) {
        break missingId;
      }

      id = R.id.sendertextset;
      TextView sendertextset = ViewBindings.findChildViewById(rootView, id);
      if (sendertextset == null) {
        break missingId;
      }

      return new SenderLayoutBinding((RelativeLayout) rootView, fileLayout, fileName, fileic, noted,
          pro, profileContainer, pronone, senderImageView, sendertextset);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
